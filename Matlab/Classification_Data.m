%% Sensor system validation
clear all
close all
clc
t_step=0.005;

%% Bag Read
varname = strings;
filename = "rosbag/0721Screw_Not_Tight.bag";
bag = rosbag(filename);
k = 1;
for i = 1 : length(bag.AvailableTopics.Row)
    if ((string(bag.AvailableTopics.Row{i}) ~= "/rosout") && (string(bag.AvailableTopics.Row{i}) ~= "/rosout_agg"))
        if (string(bag.AvailableTopics.Row{i}) == "/FSS")
            [t_temp,temp] = topic_read(bag,bag.AvailableTopics.Row{i},'Data');
        else
            [t_temp,temp] = topic_read(bag,bag.AvailableTopics.Row{i},'Data');
        end
        Data.(['t_' bag.AvailableTopics.Row{i}(2:end)]) = t_temp;
        varname(k) = string([bag.AvailableTopics.Row{i}(2:end)]);
        Data.(varname(k)) = temp;
        k = k+1;
    end
    clear t_temp temp
end
clear i bag temp_data k

%% Load cell data interpolation
range_temp_min = [];
range_temp_max = [];
for i = 1 : length(varname)-1
    range_temp_min = [range_temp_min min(Data.(['t_' char(varname(i))]))];
    range_temp_max = [range_temp_max max(Data.(['t_' char(varname(i))]))];
end
t_range = max(range_temp_min) : t_step : min(range_temp_max) ;
t = t_range-max(range_temp_min);

for i = 1 : length(varname)-1
    Data.(varname(i)) = double(Data.(varname(i)));
end

% interp1
for i = 1 : length(varname)-1
    Data_i.(varname(i))=interp1(Data.(['t_' char(varname(i))]),Data.(varname(i)),t_range);
end

%%
Data_i.t_HCmotor = [];
Data_i.HCmotor = [];
temp = 0;
i = 1;
k = 1;
while (i<length(Data.t_HCmotor) && k<length(t_range))
   Data_i.t_HCmotor(k) = t_range(k);
   Data_i.HCmotor(k) = Data.HCmotor(i);
   temp = temp + t_step;
   if(i<length(Data.t_HCmotor)+1)
       if(Data_i.t_HCmotor(k) >= Data.t_HCmotor(i+1))
           i=i+1;
       end
   end
   k = k+1;
end

%% Combining FSS Data
FSS_Together = Data_i.FSS;
FSS_Together(:,6:10) = Data_i.FSS_;
FSS_Together(:,5) = 0;
FSS_Together = FSS_Together/8000000;

Slip_Initial = 9918;
Slip_Final = 12000;
Non_Slip_Initial = 9400;
Non_Slip_Final = 9750;

Slip_Data = FSS_Together(Slip_Initial:Slip_Final, :);
Non_Slip_Data = FSS_Together(Non_Slip_Initial:Non_Slip_Final, :);

FSS_sum = sum(transpose(FSS_Together));
Fs = 20;

Data_Vector = [];
for i = 21:length(FSS_Together)
    FSS_sum_array = FSS_sum(i-Fs:i);
    FSS_sum_FFT = fft(FSS_sum_array);
    P2 = abs(FSS_sum_FFT/Fs);
    P1 = P2(1:Fs/2+1);
    P1(2:end-1) = 2*P1(2:end-1);
    f = Fs*(0:(Fs/2))/Fs;
    f = f(2:end);
    P1 = P1(2:end);
    Data_Vector(i-20,1:10) = P1;
end

for i = 21:length(FSS_Together)
    FFT_diff = [FSS_Together(i,1)-FSS_Together(i-1,1)...
        FSS_Together(i,2)-FSS_Together(i-1,2)...
        FSS_Together(i,3)-FSS_Together(i-1,3)...
        FSS_Together(i,4)-FSS_Together(i-1,4)...
        FSS_Together(i,5)-FSS_Together(i-1,5)...
        FSS_Together(i,6)-FSS_Together(i-1,6)...
        FSS_Together(i,7)-FSS_Together(i-1,7)...
        FSS_Together(i,8)-FSS_Together(i-1,8)...
        FSS_Together(i,9)-FSS_Together(i-1,9)...
        FSS_Together(i,10)-FSS_Together(i-1,10);...
        
        FSS_Together(i-1,1)-FSS_Together(i-2,1)...
        FSS_Together(i-1,2)-FSS_Together(i-2,2)...
        FSS_Together(i-1,3)-FSS_Together(i-2,3)...
        FSS_Together(i-1,4)-FSS_Together(i-2,4)...
        FSS_Together(i-1,5)-FSS_Together(i-2,5)...
        FSS_Together(i-1,6)-FSS_Together(i-2,6)...
        FSS_Together(i-1,7)-FSS_Together(i-2,7)...
        FSS_Together(i-1,8)-FSS_Together(i-2,8)...
        FSS_Together(i-1,9)-FSS_Together(i-2,9)...
        FSS_Together(i-1,10)-FSS_Together(i-2,10);...
       
        FSS_Together(i-2,1)-FSS_Together(i-3,1)...
        FSS_Together(i-2,2)-FSS_Together(i-3,2)...
        FSS_Together(i-2,3)-FSS_Together(i-3,3)...
        FSS_Together(i-2,4)-FSS_Together(i-3,4)...
        FSS_Together(i-2,5)-FSS_Together(i-3,5)...
        FSS_Together(i-2,6)-FSS_Together(i-3,6)...
        FSS_Together(i-2,7)-FSS_Together(i-3,7)...
        FSS_Together(i-2,8)-FSS_Together(i-3,8)...
        FSS_Together(i-2,9)-FSS_Together(i-3,9)...
        FSS_Together(i-2,10)-FSS_Together(i-3,10);...
        
        FSS_Together(i-3,1)-FSS_Together(i-4,1)...
        FSS_Together(i-3,2)-FSS_Together(i-4,2)...
        FSS_Together(i-3,3)-FSS_Together(i-4,3)...
        FSS_Together(i-3,4)-FSS_Together(i-4,4)...
        FSS_Together(i-3,5)-FSS_Together(i-4,5)...
        FSS_Together(i-3,6)-FSS_Together(i-4,6)...
        FSS_Together(i-3,7)-FSS_Together(i-4,7)...
        FSS_Together(i-3,8)-FSS_Together(i-4,8)...
        FSS_Together(i-3,9)-FSS_Together(i-4,9)...
        FSS_Together(i-3,10)-FSS_Together(i-4,10);...
        
        FSS_Together(i-4,1)-FSS_Together(i-5,1)...
        FSS_Together(i-4,2)-FSS_Together(i-5,2)...
        FSS_Together(i-4,3)-FSS_Together(i-5,3)...
        FSS_Together(i-4,4)-FSS_Together(i-5,4)...
        FSS_Together(i-4,5)-FSS_Together(i-5,5)...
        FSS_Together(i-4,6)-FSS_Together(i-5,6)...
        FSS_Together(i-4,7)-FSS_Together(i-5,7)...
        FSS_Together(i-4,8)-FSS_Together(i-5,8)...
        FSS_Together(i-4,9)-FSS_Together(i-5,9)...
        FSS_Together(i-4,10)-FSS_Together(i-5,10);...
    
        FSS_Together(i-5,1)-FSS_Together(i-6,1)...
        FSS_Together(i-5,2)-FSS_Together(i-6,2)...
        FSS_Together(i-5,3)-FSS_Together(i-6,3)...
        FSS_Together(i-5,4)-FSS_Together(i-6,4)...
        FSS_Together(i-5,5)-FSS_Together(i-6,5)...
        FSS_Together(i-5,6)-FSS_Together(i-6,6)...
        FSS_Together(i-5,7)-FSS_Together(i-6,7)...
        FSS_Together(i-5,8)-FSS_Together(i-6,8)...
        FSS_Together(i-5,9)-FSS_Together(i-6,9)...
        FSS_Together(i-5,10)-FSS_Together(i-6,10);...
        
        FSS_Together(i-6,1)-FSS_Together(i-7,1)...
        FSS_Together(i-6,2)-FSS_Together(i-7,2)...
        FSS_Together(i-6,3)-FSS_Together(i-7,3)...
        FSS_Together(i-6,4)-FSS_Together(i-7,4)...
        FSS_Together(i-6,5)-FSS_Together(i-7,5)...
        FSS_Together(i-6,6)-FSS_Together(i-7,6)...
        FSS_Together(i-6,7)-FSS_Together(i-7,7)...
        FSS_Together(i-6,8)-FSS_Together(i-7,8)...
        FSS_Together(i-6,9)-FSS_Together(i-7,9)...
        FSS_Together(i-6,10)-FSS_Together(i-7,10);...
        
        FSS_Together(i-7,1)-FSS_Together(i-8,1)...
        FSS_Together(i-7,2)-FSS_Together(i-8,2)...
        FSS_Together(i-7,3)-FSS_Together(i-8,3)...
        FSS_Together(i-7,4)-FSS_Together(i-8,4)...
        FSS_Together(i-7,5)-FSS_Together(i-8,5)...
        FSS_Together(i-7,6)-FSS_Together(i-8,6)...
        FSS_Together(i-7,7)-FSS_Together(i-8,7)...
        FSS_Together(i-7,8)-FSS_Together(i-8,8)...
        FSS_Together(i-7,9)-FSS_Together(i-8,9)...
        FSS_Together(i-7,10)-FSS_Together(i-8,10);...
       
        FSS_Together(i-8,1)-FSS_Together(i-9,1)...
        FSS_Together(i-8,2)-FSS_Together(i-9,2)...
        FSS_Together(i-8,3)-FSS_Together(i-9,3)...
        FSS_Together(i-8,4)-FSS_Together(i-9,4)...
        FSS_Together(i-8,5)-FSS_Together(i-9,5)...
        FSS_Together(i-8,6)-FSS_Together(i-9,6)...
        FSS_Together(i-8,7)-FSS_Together(i-9,7)...
        FSS_Together(i-8,8)-FSS_Together(i-9,8)...
        FSS_Together(i-8,9)-FSS_Together(i-9,9)...
        FSS_Together(i-8,10)-FSS_Together(i-9,10);...
        
        FSS_Together(i-9,1)-FSS_Together(i-10,1)...
        FSS_Together(i-9,2)-FSS_Together(i-10,2)...
        FSS_Together(i-9,3)-FSS_Together(i-10,3)...
        FSS_Together(i-9,4)-FSS_Together(i-10,4)...
        FSS_Together(i-9,5)-FSS_Together(i-10,5)...
        FSS_Together(i-9,6)-FSS_Together(i-10,6)...
        FSS_Together(i-9,7)-FSS_Together(i-10,7)...
        FSS_Together(i-9,8)-FSS_Together(i-10,8)...
        FSS_Together(i-9,9)-FSS_Together(i-10,9)...
        FSS_Together(i-9,10)-FSS_Together(i-10,10)];

    FFT_diff = abs(FFT_diff);
    temp = transpose(FFT_diff)*FFT_diff;
    Cov = sum(temp(:)) - trace(temp);
    Data_Vector(i-20, 11) = Cov;
end

Data_Vector_5_Samples = [];

Sample_Number = 10;

for i=21:length(FSS_Together)-20
   for j=0:Sample_Number-1
      Data_Vector_5_Samples(i-20, 11*j+1:11*j+11) = Data_Vector(i-j,:);
   end
end

for i = 21:length(FSS_Together)-1
   if(Data_i.HCmotor(i)~=0)
       Data_Vector_5_Samples(i-20,11*Sample_Number+1) = 1;
   else
       Data_Vector_5_Samples(i-20,11*Sample_Number+1) = 0;
   end
end






















